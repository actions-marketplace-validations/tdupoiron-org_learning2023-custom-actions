name: Create Repository on Issue creation via inline scripts

on:
  issues:
    types:
      - opened

permissions:
  issues: write

jobs:

  # 1. Extract repository settings from issue body
  extract_repository_settings:

    if: contains(github.event.issue.labels.*.name, 'repo-ops')

    uses: ./.github/workflows/rwf-extract-repository-settings.yml
    with: 
      issue_body: ${{ github.event.issue.body }}

  # 2. Rename issue
  rename_issue:
    needs: extract_repository_settings

    uses: ./.github/workflows/rwf-rename-issue.yml
    with: 
      issue_number: ${{ github.event.issue.number }}
      repo_owner: ${{ github.event.repository.owner.login }}
      repo_name: ${{ github.event.repository.name }}
      issue_title: "New repository request: ${{ needs.extract_repository_settings.outputs.repository_name }}"
    secrets: inherit

  # 3. Create repository
  create_repository:
    needs: rename_issue

    runs-on: ubuntu-latest

    steps:

      - name: Create repository
        id: create_repository
        uses: actions/github-script@v6.3.3
        with:
          github-token: ${{ secrets.REPO_OPS_TOKEN }}
          script: |
            github.rest.repos.createInOrg({
              org: context.repo.owner,
              name: '${{ needs.extract_repository_settings.outputs.repository_name }}',
              visibility: '${{ needs.extract_repository_settings.outputs.repository_visibility }}',
            }).then(({ data }) => {
                core.setOutput("repo_full_name", data.full_name);
                core.setOutput("repo_url", data.html_url);
                core.setOutput("repo_id", data.id);
                core.setOutput("status", "success");
            }
            ).catch((error) => {
                core.setOutput("status", "failure");
                core.setOutput("error", error.response.data.message);
            }
            );

  # 4. Add comment if repository was created
  add_issue_comment_on_success:
    if: contains(needs.create_repository.outputs.status, 'success')
    needs: create_repository
    uses: ./.github/workflows/rwf-comment-issue.yml
    with:
      issue_number: ${{ github.event.issue.number }}
      repo_owner: ${{ github.event.repository.owner.login }}
      repo_name: ${{ github.event.repository.name }}
      comment: "✅ Repository [${{ needs.create_repository.outputs.repo_full_name }}](${{ needs.create_repository.outputs.repo_url }}) created"
    secrets: inherit

  # 5. Close issue
  close_issue:
    needs: add_issue_comment_on_success
    uses: ./.github/workflows/rwf-close-issue.yml
    with:
      issue_number: ${{ github.event.issue.number }}
      repo_owner: ${{ github.event.repository.owner.login }}
      repo_name: ${{ github.event.repository.name }}
    secrets: inherit
  
  # 4b. Add comment if repository was not created
  add_issue_comment_on_failure:
    if: contains(needs.create_repository.outputs.status, 'failure')
    needs: create_repository
    uses: ./.github/workflows/rwf-comment-issue.yml
    with:
      issue_number: ${{ github.event.issue.number }}
      repo_owner: ${{ github.event.repository.owner.login }}
      repo_name: ${{ github.event.repository.name }}
      comment: "❌ Repository could not be created: ${{ needs.create_repository.outputs.error }}"
    secrets: inherit
